Request {
  domain: null,
  service:
   Service {
     config:
      Config {
        credentials: [SharedIniFileCredentials],
        credentialProvider: [CredentialProviderChain],
        region: 'us-east-1',
        logger: null,
        apiVersions: {},
        apiVersion: null,
        endpoint: 'dynamodb.us-east-1.amazonaws.com',
        httpOptions: [Object],
        maxRetries: undefined,
        maxRedirects: 10,
        paramValidation: true,
        sslEnabled: true,
        s3ForcePathStyle: false,
        s3BucketEndpoint: false,
        s3DisableBodySigning: true,
        s3UsEast1RegionalEndpoint: 'legacy',
        s3UseArnRegion: undefined,
        computeChecksums: true,
        convertResponseTypes: true,
        correctClockSkew: false,
        customUserAgent: null,
        dynamoDbCrc32: true,
        systemClockOffset: 0,
        signatureVersion: 'v4',
        signatureCache: true,
        retryDelayOptions: {},
        useAccelerateEndpoint: false,
        clientSideMonitoring: false,
        endpointDiscoveryEnabled: false,
        endpointCacheSize: 1000,
        hostPrefixEnabled: true,
        stsRegionalEndpoints: 'legacy' },
     isGlobalEndpoint: false,
     endpoint:
      Endpoint {
        protocol: 'https:',
        host: 'dynamodb.us-east-1.amazonaws.com',
        port: 443,
        hostname: 'dynamodb.us-east-1.amazonaws.com',
        pathname: '/',
        path: '/',
        href: 'https://dynamodb.us-east-1.amazonaws.com/' },
     _events: { apiCallAttempt: [Array], apiCall: [Array] },
     MONITOR_EVENTS_BUBBLE: [Function: EVENTS_BUBBLE],
     CALL_EVENTS_BUBBLE: [Function: CALL_EVENTS_BUBBLE],
     _clientId: 1 },
  operation: 'putItem',
  params:
   { TableName: 'nodeusers',
     Item: { email: [Object], password: [Object] } },
  httpRequest:
   HttpRequest {
     method: 'POST',
     path: '/',
     headers:
      { 'User-Agent': 'aws-sdk-nodejs/2.605.0 linux/v10.17.0 callback',
        'Content-Type': 'application/x-amz-json-1.0',
        'X-Amz-Target': 'DynamoDB_20120810.PutItem',
        'X-Amz-Content-Sha256':
         '42aff629d1d98fd3d60b4856299ff468e75db2793a2facb6ed8423ec4dc37325',
        'Content-Length': 93,
        Host: 'dynamodb.us-east-1.amazonaws.com',
        'X-Amz-Date': '20200124T105714Z',
        'x-amz-security-token':
         'IQoJb3JpZ2luX2VjEMP//////////wEaCXVzLWVhc3QtMSJGMEQCIHqe2HOVEudFb8yxxLkb/ntqcqbTFffxqBJ1G3NHNOhBAiBgvLtA+EUrmrfOseUdRTn94XFHbk7PMmi67sm62OjYnyrtAghcEAEaDDgwNTc0NjI0OTE3NyIM2OsKcE0LHNmaCvGkKsoCcn5G6qxZGHFJ49dYlXxmDGx5V6qqxysND6j1eDfHUPfDFhJscKQMNUtqQWV1uSbBtSqC1NQguDtEHpvWQ27AXi82h2ZFtKFJ9jfkqcgOSn5sJ8D+W3hRTIL2PiNlvi1A0ZpXKvDfLJ1BHymw/BkEWcZ8lotVKayfbrdZ8+gYCf4/kFEvdamJ4ETuLQb0I72PA9l8YbEVhLZcAOfdxEIcnx48lYRq6gCUtHFgGOh3hXTcHda4WaDHIUM+eSDgR7bJbPLG5QM71Vp2POaU+fLWHCmqJrqiZMmIJrChfL7jEBHuHj+8OPw5OfK4VV/9yudUwsDSRld2BSkz/tZfgwBy9Zx6arjQ4OoGUOuis58fLNM1YIcS3yTn6qnT6UqqMwGS/0F7/5JFH9ZKhIUAbbqR35sKHx9zGGpSbZr0a1R6ky0QKjlD2v0y4W9kMMeKqvEFOs8CEA+mmBSvMQfQf/L7B1vSWYWOuOGpl8RyKp+lR1UzsQphmO3HrnHZTx6Iw8EnNOnHAZaJZETp3DEp65OeHAlEAa+83lcyT83V1TbMQqC3y3NjO8lmg8bwODxTPJ16y2y+qXjvxV4CaBvv8Z0HthclRe0cx/1OwRIfs4qI5UA9pUyX3BoGN9XCZucYyorAoLBuDKXDcylPCNXpH/sXrY/+FWax6C0a0/6gDO/SLg78GMQiOGybk/NccTn840sItv6wHDCYcdJDtOHAnw6fOyI9vDmS4Qp3DIibTYd3vQXzG4eojyuid3k9ZaIfgfSMirinB2uFrFzTw9VUnXdYGU84mGxTbwwss37g33rYliQdRwSoj87L1E4/0OtTZIovrfWbi/kfdTa05O3ZvzMtb/i2njCZJwwWP62VDCePZBG28iENJ9MPevnjEBweWBpWU1I=',
        Authorization:
         'AWS4-HMAC-SHA256 Credential=ASIA3XGRYBXMUJFRIVWB/20200124/us-east-1/dynamodb/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token;x-amz-target, Signature=b63583ea0c33cf69f868fec369c0d5321e3faee649e68f447a82bb9c116b97b4' },
     body:
      '{"TableName":"nodeusers","Item":{"email":{"S":"annant11579863435"},"password":{"S":"pass1"}}}',
     endpoint:
      Endpoint {
        protocol: 'https:',
        host: 'dynamodb.us-east-1.amazonaws.com',
        port: 443,
        hostname: 'dynamodb.us-east-1.amazonaws.com',
        pathname: '/',
        path: '/',
        href: 'https://dynamodb.us-east-1.amazonaws.com/',
        constructor: [Function] },
     region: 'us-east-1',
     _userAgent: 'aws-sdk-nodejs/2.605.0 linux/v10.17.0 callback',
     stream:
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 93,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [TLSSocket],
        connection: [TLSSocket],
        _header:
         'POST / HTTP/1.1\r\nUser-Agent: aws-sdk-nodejs/2.605.0 linux/v10.17.0 callback\r\nContent-Type: application/x-amz-json-1.0\r\nX-Amz-Target: DynamoDB_20120810.PutItem\r\nX-Amz-Content-Sha256: 42aff629d1d98fd3d60b4856299ff468e75db2793a2facb6ed8423ec4dc37325\r\nContent-Length: 93\r\nHost: dynamodb.us-east-1.amazonaws.com\r\nX-Amz-Date: 20200124T105714Z\r\nx-amz-security-token: IQoJb3JpZ2luX2VjEMP//////////wEaCXVzLWVhc3QtMSJGMEQCIHqe2HOVEudFb8yxxLkb/ntqcqbTFffxqBJ1G3NHNOhBAiBgvLtA+EUrmrfOseUdRTn94XFHbk7PMmi67sm62OjYnyrtAghcEAEaDDgwNTc0NjI0OTE3NyIM2OsKcE0LHNmaCvGkKsoCcn5G6qxZGHFJ49dYlXxmDGx5V6qqxysND6j1eDfHUPfDFhJscKQMNUtqQWV1uSbBtSqC1NQguDtEHpvWQ27AXi82h2ZFtKFJ9jfkqcgOSn5sJ8D+W3hRTIL2PiNlvi1A0ZpXKvDfLJ1BHymw/BkEWcZ8lotVKayfbrdZ8+gYCf4/kFEvdamJ4ETuLQb0I72PA9l8YbEVhLZcAOfdxEIcnx48lYRq6gCUtHFgGOh3hXTcHda4WaDHIUM+eSDgR7bJbPLG5QM71Vp2POaU+fLWHCmqJrqiZMmIJrChfL7jEBHuHj+8OPw5OfK4VV/9yudUwsDSRld2BSkz/tZfgwBy9Zx6arjQ4OoGUOuis58fLNM1YIcS3yTn6qnT6UqqMwGS/0F7/5JFH9ZKhIUAbbqR35sKHx9zGGpSbZr0a1R6ky0QKjlD2v0y4W9kMMeKqvEFOs8CEA+mmBSvMQfQf/L7B1vSWYWOuOGpl8RyKp+lR1UzsQphmO3HrnHZTx6Iw8EnNOnHAZaJZETp3DEp65OeHAlEAa+83lcyT83V1TbMQqC3y3NjO8lmg8bwODxTPJ16y2y+qXjvxV4CaBvv8Z0HthclRe0cx/1OwRIfs4qI5UA9pUyX3BoGN9XCZucYyorAoLBuDKXDcylPCNXpH/sXrY/+FWax6C0a0/6gDO/SLg78GMQiOGybk/NccTn840sItv6wHDCYcdJDtOHAnw6fOyI9vDmS4Qp3DIibTYd3vQXzG4eojyuid3k9ZaIfgfSMirinB2uFrFzTw9VUnXdYGU84mGxTbwwss37g33rYliQdRwSoj87L1E4/0OtTZIovrfWbi/kfdTa05O3ZvzMtb/i2njCZJwwWP62VDCePZBG28iENJ9MPevnjEBweWBpWU1I=\r\nAuthorization: AWS4-HMAC-SHA256 Credential=ASIA3XGRYBXMUJFRIVWB/20200124/us-east-1/dynamodb/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token;x-amz-target, Signature=b63583ea0c33cf69f868fec369c0d5321e3faee649e68f447a82bb9c116b97b4\r\nConnection: keep-alive\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: false,
        res: null,
        aborted: undefined,
        timeoutCb: [Function: emitRequestTimeout],
        upgradeOrConnect: false,
        parser: [HTTPParser],
        maxHeadersCount: null,
        didCallback: false,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] } },
  startTime: 2020-01-24T10:57:14.843Z,
  response:
   Response {
     request: [Circular],
     data: null,
     error: null,
     retryCount: 0,
     redirectCount: 0,
     httpResponse:
      HttpResponse {
        statusCode: undefined,
        headers: {},
        body: undefined,
        streaming: false,
        stream: null,
        _abortCallback: [Function: callNextListener] },
     maxRetries: 10,
     maxRedirects: 10,
     nextPage: [Function] },
  _asm:
   AcceptorStateMachine {
     currentState: 'send',
     states:
      { validate: [Object],
        build: [Object],
        afterBuild: [Object],
        sign: [Object],
        retry: [Object],
        afterRetry: [Object],
        send: [Object],
        validateResponse: [Object],
        extractError: [Object],
        extractData: [Object],
        restart: [Object],
        success: [Object],
        error: [Object],
        complete: [Object] } },
  _haltHandlersOnError: false,
  _events:
   { validate:
      [ [Function],
        [Function],
        [Function],
        [Function: VALIDATE_REGION],
        [Function: BUILD_IDEMPOTENCY_TOKENS],
        [Function: VALIDATE_PARAMETERS] ],
     afterBuild:
      [ [Function],
        [Function: SET_CONTENT_LENGTH],
        [Function: SET_HTTP_HOST] ],
     restart: [ [Function: RESTART] ],
     sign: [ [Function], [Function], [Function] ],
     validateResponse: [ [Function: VALIDATE_RESPONSE], [Function] ],
     send: [ [Function] ],
     httpHeaders: [ [Function: HTTP_HEADERS] ],
     httpData: [ [Function: HTTP_DATA] ],
     httpDone: [ [Function: HTTP_DONE] ],
     retry:
      [ [Function: FINALIZE_ERROR],
        [Function: INVALIDATE_CREDENTIALS],
        [Function: EXPIRED_SIGNATURE],
        [Function: CLOCK_SKEWED],
        [Function: REDIRECT],
        [Function: RETRY_CHECK],
        [Function: API_CALL_ATTEMPT_RETRY] ],
     afterRetry: [ [Function] ],
     build: [ [Function: buildRequest] ],
     extractData:
      [ [Function: extractRequestId],
        [Function: checkCrc32],
        [Function: extractData],
        [Function] ],
     extractError: [ [Function: extractError], [Function: extractRequestId] ],
     httpError: [ [Function: ENOTFOUND_ERROR] ],
     success: [ [Function: API_CALL_ATTEMPT] ],
     complete: [ [Function: API_CALL], [Function] ] },
  emit: [Function: emit],
  API_CALL_ATTEMPT: [Function: API_CALL_ATTEMPT],
  API_CALL_ATTEMPT_RETRY: [Function: API_CALL_ATTEMPT_RETRY],
  API_CALL: [Function: API_CALL],
  rawParams:
   { TableName: 'nodeusers',
     Item: { email: 'annant11579863435', password: 'pass1' } },
  signedAt: 2020-01-24T10:57:14.851Z }
