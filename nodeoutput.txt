res Request {
  domain: null,
  service:
   Service {
     config:
      Config {
        credentials: [SharedIniFileCredentials],
        credentialProvider: [CredentialProviderChain],
        region: 'us-east-1',
        logger: null,
        apiVersions: {},
        apiVersion: null,
        endpoint: 'dynamodb.us-east-1.amazonaws.com',
        httpOptions: [Object],
        maxRetries: undefined,
        maxRedirects: 10,
        paramValidation: true,
        sslEnabled: true,
        s3ForcePathStyle: false,
        s3BucketEndpoint: false,
        s3DisableBodySigning: true,
        s3UsEast1RegionalEndpoint: 'legacy',
        s3UseArnRegion: undefined,
        computeChecksums: true,
        convertResponseTypes: true,
        correctClockSkew: false,
        customUserAgent: null,
        dynamoDbCrc32: true,
        systemClockOffset: 0,
        signatureVersion: 'v4',
        signatureCache: true,
        retryDelayOptions: {},
        useAccelerateEndpoint: false,
        clientSideMonitoring: false,
        endpointDiscoveryEnabled: false,
        endpointCacheSize: 1000,
        hostPrefixEnabled: true,
        stsRegionalEndpoints: 'legacy' },
     isGlobalEndpoint: false,
     endpoint:
      Endpoint {
        protocol: 'https:',
        host: 'dynamodb.us-east-1.amazonaws.com',
        port: 443,
        hostname: 'dynamodb.us-east-1.amazonaws.com',
        pathname: '/',
        path: '/',
        href: 'https://dynamodb.us-east-1.amazonaws.com/' },
     _events: { apiCallAttempt: [Array], apiCall: [Array] },
     MONITOR_EVENTS_BUBBLE: [Function: EVENTS_BUBBLE],
     CALL_EVENTS_BUBBLE: [Function: CALL_EVENTS_BUBBLE],
     _clientId: 1 },
  operation: 'putItem',
  params:
   { TableName: 'nodeusers',
     Item:
      { time_of_insertion: [Object],
        email: [Object],
        password: [Object] } },
  httpRequest:
   HttpRequest {
     method: 'POST',
     path: '/',
     headers:
      { 'User-Agent': 'aws-sdk-nodejs/2.605.0 linux/v10.17.0 callback',
        'Content-Type': 'application/x-amz-json-1.0',
        'X-Amz-Target': 'DynamoDB_20120810.PutItem',
        'X-Amz-Content-Sha256':
         '06e57c0096830f7f576098e9106e93e2ff2750cf3185faf5cf3bbb78ee24e2a6',
        'Content-Length': 132,
        Host: 'dynamodb.us-east-1.amazonaws.com',
        'X-Amz-Date': '20200128T052318Z',
        'x-amz-security-token':
         'IQoJb3JpZ2luX2VjEBwaCXVzLWVhc3QtMSJGMEQCIF7j3+yQp+7Dgu6JzIAKKz4bC3Pvu+zH5xRFBlQ6Dt+MAiAYb8mEhPan3h7ekvAmCP6WvjtHTGrcMz965/AZ2vHa2Cr2Agi1//////////8BEAEaDDgwNTc0NjI0OTE3NyIM6dfSb5VM0SeExiIxKsoC8wZbh5t75RpGShFGrP/Vgm/TPz+6p5yWIFJMkX2Eq82Y/rxqBEE3dYXj5cIoJdiQEK7VW5QtGzh37M+ZcFOoacPCHZZOf3bofZRFCHh8Jx/1KSoRMgBsm4S6BDpXIBeUoeP9svIvSVG/rlRNP0JjUlkxEkp0/K1p20MDNeLOZmaCMsvOJDT7Vn8VzRkBnMhYaAKbWRAjJLkstLJP2Kf6VEYdLZnmdQtD4srOXJQY9QXtZJbxQ9kMgfPyXH/WUOErk3041r6TP3h0mlXhHhMxK5fkw4eKMnPwwM4fHqln1mDcNH7SjycmApVgU30HlhckVQFT17ITBGGAI1BE2TE/7zUK97q/PTe5Rh87ednqZ/7v9sDtn0Lb1N/+oNWV73jYeXtatWxOv/wXBFM8Hbu4o7lfQMGRlAg5BtFpAgNkXdwctVhOSLojp1x5MOfdvvEFOs8C4umuOZFZk+23b6XDzzmP5gxOtoyV7WAi5E0CXcBO8DJIx5CHOAUw7YqvUNkWM7Ev6aqF+ae4pTR+mUChtGRntPfJQWChuOKwmZwLtZDxTIyYnjY2FVQJ/TqLo3LmQBpfjVWoEWrbQzN/DCswI7Qyqoihuktr9WUmVd0v37TonMtAtchRhQUU+qbF19HvP+6Mzm4ijcrnfLs4gOy4NcPyFRHTWlNrY0yIdNq5XWOHQPZMgvKBth56b1+TAH7u5d/U6nEpJbuoI0nY7fREMWmJScmuc8sYuTusix/ZAvfiHEBCIpDEPd9ualnNLm/1am7PyZf65nwRb757mw2gQhp8lkKIBKldkkXgZ+TG7B0euN6W3EP5ugkxdosqnVEURjrR4vQv9B7MQsXBZZvdgc859ihmkfHwFMdMTFMr4ZGzj8iKD5vQwM5sK3QvJBIPelg=',
        Authorization:
         'AWS4-HMAC-SHA256 Credential=ASIA3XGRYBXM6YRNMGEM/20200128/us-east-1/dynamodb/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token;x-amz-target, Signature=30f73bf2547d3df8512ff8c44fba5b17fc2b7afe4e1be152f4c0180aee074fa5' },
     body:
      '{"TableName":"nodeusers","Item":{"time_of_insertion":{"S":"1580188999"},"email":{"S":"annant11580188999"},"password":{"S":"pass1"}}}',
     endpoint:
      Endpoint {
        protocol: 'https:',
        host: 'dynamodb.us-east-1.amazonaws.com',
        port: 443,
        hostname: 'dynamodb.us-east-1.amazonaws.com',
        pathname: '/',
        path: '/',
        href: 'https://dynamodb.us-east-1.amazonaws.com/',
        constructor: [Function] },
     region: 'us-east-1',
     _userAgent: 'aws-sdk-nodejs/2.605.0 linux/v10.17.0 callback',
     stream:
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 132,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [TLSSocket],
        connection: [TLSSocket],
        _header:
         'POST / HTTP/1.1\r\nUser-Agent: aws-sdk-nodejs/2.605.0 linux/v10.17.0 callback\r\nContent-Type: application/x-amz-json-1.0\r\nX-Amz-Target: DynamoDB_20120810.PutItem\r\nX-Amz-Content-Sha256: 06e57c0096830f7f576098e9106e93e2ff2750cf3185faf5cf3bbb78ee24e2a6\r\nContent-Length: 132\r\nHost: dynamodb.us-east-1.amazonaws.com\r\nX-Amz-Date: 20200128T052318Z\r\nx-amz-security-token: IQoJb3JpZ2luX2VjEBwaCXVzLWVhc3QtMSJGMEQCIF7j3+yQp+7Dgu6JzIAKKz4bC3Pvu+zH5xRFBlQ6Dt+MAiAYb8mEhPan3h7ekvAmCP6WvjtHTGrcMz965/AZ2vHa2Cr2Agi1//////////8BEAEaDDgwNTc0NjI0OTE3NyIM6dfSb5VM0SeExiIxKsoC8wZbh5t75RpGShFGrP/Vgm/TPz+6p5yWIFJMkX2Eq82Y/rxqBEE3dYXj5cIoJdiQEK7VW5QtGzh37M+ZcFOoacPCHZZOf3bofZRFCHh8Jx/1KSoRMgBsm4S6BDpXIBeUoeP9svIvSVG/rlRNP0JjUlkxEkp0/K1p20MDNeLOZmaCMsvOJDT7Vn8VzRkBnMhYaAKbWRAjJLkstLJP2Kf6VEYdLZnmdQtD4srOXJQY9QXtZJbxQ9kMgfPyXH/WUOErk3041r6TP3h0mlXhHhMxK5fkw4eKMnPwwM4fHqln1mDcNH7SjycmApVgU30HlhckVQFT17ITBGGAI1BE2TE/7zUK97q/PTe5Rh87ednqZ/7v9sDtn0Lb1N/+oNWV73jYeXtatWxOv/wXBFM8Hbu4o7lfQMGRlAg5BtFpAgNkXdwctVhOSLojp1x5MOfdvvEFOs8C4umuOZFZk+23b6XDzzmP5gxOtoyV7WAi5E0CXcBO8DJIx5CHOAUw7YqvUNkWM7Ev6aqF+ae4pTR+mUChtGRntPfJQWChuOKwmZwLtZDxTIyYnjY2FVQJ/TqLo3LmQBpfjVWoEWrbQzN/DCswI7Qyqoihuktr9WUmVd0v37TonMtAtchRhQUU+qbF19HvP+6Mzm4ijcrnfLs4gOy4NcPyFRHTWlNrY0yIdNq5XWOHQPZMgvKBth56b1+TAH7u5d/U6nEpJbuoI0nY7fREMWmJScmuc8sYuTusix/ZAvfiHEBCIpDEPd9ualnNLm/1am7PyZf65nwRb757mw2gQhp8lkKIBKldkkXgZ+TG7B0euN6W3EP5ugkxdosqnVEURjrR4vQv9B7MQsXBZZvdgc859ihmkfHwFMdMTFMr4ZGzj8iKD5vQwM5sK3QvJBIPelg=\r\nAuthorization: AWS4-HMAC-SHA256 Credential=ASIA3XGRYBXM6YRNMGEM/20200128/us-east-1/dynamodb/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token;x-amz-target, Signature=30f73bf2547d3df8512ff8c44fba5b17fc2b7afe4e1be152f4c0180aee074fa5\r\nConnection: keep-alive\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: false,
        res: null,
        aborted: undefined,
        timeoutCb: [Function: emitRequestTimeout],
        upgradeOrConnect: false,
        parser: [HTTPParser],
        maxHeadersCount: null,
        didCallback: false,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] } },
  startTime: 2020-01-28T05:23:18.666Z,
  response:
   Response {
     request: [Circular],
     data: null,
     error: null,
     retryCount: 0,
     redirectCount: 0,
     httpResponse:
      HttpResponse {
        statusCode: undefined,
        headers: {},
        body: undefined,
        streaming: false,
        stream: null,
        _abortCallback: [Function: callNextListener] },
     maxRetries: 10,
     maxRedirects: 10,
     nextPage: [Function] },
  _asm:
   AcceptorStateMachine {
     currentState: 'send',
     states:
      { validate: [Object],
        build: [Object],
        afterBuild: [Object],
        sign: [Object],
        retry: [Object],
        afterRetry: [Object],
        send: [Object],
        validateResponse: [Object],
        extractError: [Object],
        extractData: [Object],
        restart: [Object],
        success: [Object],
        error: [Object],
        complete: [Object] } },
  _haltHandlersOnError: false,
  _events:
   { validate:
      [ [Function],
        [Function],
        [Function],
        [Function: VALIDATE_REGION],
        [Function: BUILD_IDEMPOTENCY_TOKENS],
        [Function: VALIDATE_PARAMETERS] ],
     afterBuild:
      [ [Function],
        [Function: SET_CONTENT_LENGTH],
        [Function: SET_HTTP_HOST] ],
     restart: [ [Function: RESTART] ],
     sign: [ [Function], [Function], [Function] ],
     validateResponse: [ [Function: VALIDATE_RESPONSE], [Function] ],
     send: [ [Function] ],
     httpHeaders: [ [Function: HTTP_HEADERS] ],
     httpData: [ [Function: HTTP_DATA] ],
     httpDone: [ [Function: HTTP_DONE] ],
     retry:
      [ [Function: FINALIZE_ERROR],
        [Function: INVALIDATE_CREDENTIALS],
        [Function: EXPIRED_SIGNATURE],
        [Function: CLOCK_SKEWED],
        [Function: REDIRECT],
        [Function: RETRY_CHECK],
        [Function: API_CALL_ATTEMPT_RETRY] ],
     afterRetry: [ [Function] ],
     build: [ [Function: buildRequest] ],
     extractData:
      [ [Function: extractRequestId],
        [Function: checkCrc32],
        [Function: extractData],
        [Function] ],
     extractError: [ [Function: extractError], [Function: extractRequestId] ],
     httpError: [ [Function: ENOTFOUND_ERROR] ],
     success: [ [Function: API_CALL_ATTEMPT] ],
     complete: [ [Function: API_CALL], [Function] ] },
  emit: [Function: emit],
  API_CALL_ATTEMPT: [Function: API_CALL_ATTEMPT],
  API_CALL_ATTEMPT_RETRY: [Function: API_CALL_ATTEMPT_RETRY],
  API_CALL: [Function: API_CALL],
  rawParams:
   { TableName: 'nodeusers',
     Item:
      { time_of_insertion: '1580188999',
        email: 'annant11580188999',
        password: 'pass1' } },
  signedAt: 2020-01-28T05:23:18.673Z }
